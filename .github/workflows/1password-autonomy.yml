# .github/workflows/1password-autonomy.yml
name: 1Password CLI Autonomous Access

on:
  workflow_dispatch: # Permite acionar o workflow manualmente na interface do GitHub

jobs:
  run-1password-script:
    runs-on: ubuntu-latest # Ambiente de execução no GitHub Actions (Linux é comumente usado, mas Windows também seria possível)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Clona seu repositório para o ambiente do runner

    - name: Setup 1Password CLI
      run: |
        # Baixa e instala o 1Password CLI no runner
        # Para sistemas baseados em Debian/Ubuntu (ubuntu-latest)
        curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
        echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main' | sudo tee /etc/apt/sources.list.d/1password.list
        sudo apt update
        sudo apt install -y 1password-cli

    - name: Run 1Password PowerShell Script
      env:
        OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }} # Recupera o segredo do repositório
      shell: pwsh # Define o PowerShell como o shell para este passo
      run: |
        # Conteúdo do script PowerShell
        $env:OP_SERVICE_ACCOUNT_TOKEN = $env:OP_SERVICE_ACCOUNT_TOKEN
        
        Write-Host "Tentando listar itens do cofre 'A.N.A. One' via 1Password CLI..."
        
        $result = op item list --vault "A.N.A. One" --format json
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "? Sucesso! Itens do cofre 'A.N.A. One' listados:"
            if ($result | ConvertFrom-Json) {
                ($result | ConvertFrom-Json | Select-Object -First 3 | ConvertTo-Json -Depth 2)
            } else {
                Write-Host "Nenhum item encontrado ou o resultado JSON está vazio."
            }
        } else {
            Write-Error "? Erro ao listar itens do cofre 'A.N.A. One'. Código de saída: $LASTEXITCODE"
            Write-Error $result
        }
        
        Write-Host "`nVerificando informações da conta de serviço autenticada:"
        op whoami --format json
